image: docker:20.10.16

stages:
  - build
  - deploy

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:armstrong-$CI_COMMIT_SHORT_SHA
  DOCKER_TLS_CERTDIR: '/certs'

services:
  - docker:20.10.16-dind

before_script:
  - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
  - eval $(ssh-agent -s)
  - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

build:
  stage: build
  variables:
    NEXT_PUBLIC_SOCKET_HOST: $NEXT_PUBLIC_SOCKET_HOST
    NEXT_PUBLIC_RECAPTCHA_SITE_KEY: $NEXT_PUBLIC_RECAPTCHA_SITE_KEY
  script:
    - docker build -f Dockerfile -t $IMAGE_TAG .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $IMAGE_TAG
  only:
    - staging

deploy:
  image: alpine:latest
  stage: deploy
  script:
    - ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd $PROJECT_DIR && git checkout $CI_COMMIT_BRANCH && git pull origin $CI_COMMIT_BRANCH && docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY && docker pull $IMAGE_TAG && export IMAGE_TAG=$IMAGE_TAG && docker stack deploy --with-registry-auth -c docker-compose.yml armstrong"
  only:
    - staging
